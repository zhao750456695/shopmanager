<Window x:Class="MicroDo.ShopManager.View.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MicroDo.ShopManager.View"
        mc:Ignorable="d"
        WindowState="Maximized"
        Topmost="True"
                ResizeMode="NoResize" WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        Title="MainView" Height="450" Width="800">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Assets/Styles/DefaultStyle.xaml"/>
                <ResourceDictionary>
                    <Style TargetType="RadioButton" x:Key="NavButtonStyle">
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="RadioButton">
                                    <Border Background="Transparent" CornerRadius="8" Name="back">
                                        <ContentControl Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="20, 4" FontSize="13"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter TargetName="back" Property="Background" Value="#44ffffff"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>


                    <SolidColorBrush x:Key="Button.Static.Background" Color="Transparent"/>
                    <SolidColorBrush x:Key="Button.Static.Border" Color="Transparent"/>


                    <Style x:Key="TopButtonStyle" TargetType="{x:Type Button}">

                        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                        <Setter Property="Foreground" Value="White"/>

                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="10,8"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsDefaulted" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">


                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">


                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">



                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Border Margin="5" Background="White" CornerRadius="10">
        <Border.Effect>
            <DropShadowEffect Color="Gray" ShadowDepth="0" BlurRadius="5" Opacity="0.3" Direction="0"/>
        </Border.Effect>
        <Grid>
            <Border Background="#CE0000" Height="88" VerticalAlignment="Top" CornerRadius="5,5,0,0"/>
            <!-- 窗口控制按钮 -->
            <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right">
                <Button Style="{StaticResource WindowControlButtonStyle}" Content="&#xe621;" ></Button>
                <Button Style="{StaticResource WindowControlButtonStyle}" Content="&#xe64b;"></Button>
                <Button Style="{StaticResource WindowControlButtonStyle}" Content="&#xe620;" Click="btnMin_Click"></Button>
            </StackPanel>


            <!-- 设置三行，分别是logo用户信息，标签搜索框， -->
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition Height="88"  ></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>

                <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Right">
                    <Button Content="锁屏" Style="{DynamicResource TopButtonStyle}">

                    </Button>
                    <Button Content="交接班" Style="{DynamicResource TopButtonStyle}"></Button>
                    <Button Content="后台" Style="{DynamicResource TopButtonStyle}"></Button>
                    <Button Content="消息" Style="{DynamicResource TopButtonStyle}"></Button>
                    <Button Content="返回桌面" Style="{DynamicResource TopButtonStyle}"></Button>

                </StackPanel>

                <StackPanel Margin="18,48,18,8"  Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                    <!-- 标签按钮是互斥的，可以用RadioButton -->
                    <!-- 标签样式可能也就这里用，定义在当前窗口资源中 -->
                    <RadioButton Content="欢迎页" Style="{StaticResource NavButtonStyle}"  IsChecked="True"  Command="{Binding NavChangeCommand}" CommandParameter="FirstPageView"></RadioButton>
                    <RadioButton Content="收银台" Style="{StaticResource NavButtonStyle}" ></RadioButton>
                    <RadioButton Content="交易明细" Style="{StaticResource NavButtonStyle}"></RadioButton>
                    <RadioButton Content="进销存" Style="{StaticResource NavButtonStyle}"></RadioButton>
                    <RadioButton Content="网上订单" Style="{StaticResource NavButtonStyle}"></RadioButton>
                    <RadioButton Content="设置" Style="{StaticResource NavButtonStyle}"></RadioButton>
                </StackPanel>


                <ContentControl Name="contentControl" Grid.Row="1" Content="{Binding MainContent}"/>

            </Grid>

        </Grid>
    </Border>
</Window>
